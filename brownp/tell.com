$ IF F$MODE() .EQS. "NETWORK" THEN GOTO NETWORK
$ !
$ ! Execute DCL command(s) in a remote network job - Tim Halvorsen
$ !
$ !	P1 = Node name
$ !	P2-8 = (OPTIONAL) A DCL command to be executed
$ !
$ IF P1 .EQS. "" THEN READ/PROMPT="Node: " SYS$COMMAND P1
$ NODESPEC = P1 - "::"
$ NODENAME = F$EXTRACT(0,F$LOCATE("""",NODESPEC),NODESPEC)
$ ON WARNING THEN CONTINUE
$ CLOSE/ERR=10$ TELL_SERVER
$ 10$:
$ OPEN/READ/WRITE TELL_SERVER 'NODESPEC'::"task=TELL"/ERROR=OPEN_FAILURE
$ ON WARNING THEN GOTO EXIT
$
$FLUSH_OUTPUT:
$ READ TELL_SERVER RECORD
$ IF RECORD .EQS. "ABOUT_TO_ISSUE_READ" THEN GOTO SEND_COMMAND
$ WRITE SYS$OUTPUT RECORD
$ GOTO FLUSH_OUTPUT
$
$SEND_COMMAND:
$ IF P2 .NES. "" THEN GOTO SINGLE_COMMAND
$ READ SYS$COMMAND RECORD /PROMPT="TELL ''NODENAME'> " /END=EXIT
$ RECORD := 'RECORD
$ IF RECORD .EQS. "EXIT" THEN GOTO EXIT
$ WRITE TELL_SERVER RECORD
$ GOTO FLUSH_OUTPUT
$
$SINGLE_COMMAND:
$ COMMAND := 'P2' 'P3' 'P4' 'P5' 'P6' 'P7' 'P8'
$ WRITE TELL_SERVER COMMAND
$SINGLE_FLUSH:
$ READ TELL_SERVER RECORD
$ IF RECORD .EQS. "ABOUT_TO_ISSUE_READ" THEN GOTO EXIT
$ WRITE SYS$OUTPUT RECORD
$ GOTO SINGLE_FLUSH
$
$OPEN_FAILURE:
$ ON WARNING THEN EXIT
$ COPY/LOG 0::TELL.COM 'NODESPEC'::
$ WAIT 0:0:1                        ! Wait for remote FAL process to get ready
$ OPEN/READ/WRITE TELL_SERVER 'NODESPEC'::"TASK=tell"
$ ON WARNING THEN GOTO EXIT
$ GOTO FLUSH_OUTPUT
$
$EXIT:
$ CLOSE TELL_SERVER
$ EXIT
$
$NETWORK:
$ OPEN/READ/WRITE TELL_LINK SYS$NET
$ SET NOON
$ TELL_VERIFY = 'F$VERIFY(0)'
$ DEFINE SYS$OUTPUT TELL_LINK:
$SERVER_LOOP:
$ WRITE TELL_LINK "ABOUT_TO_ISSUE_READ"
$ READ TELL_LINK TELL_STRING /END_OF_FILE=SERVER_EXIT /ERROR=SERVER_EXIT
$ 'TELL_STRING'
$ GOTO SERVER_LOOP
$SERVER_EXIT:
$ IF TELL_VERIFY THEN SET VERIFY
$ CLOSE TELL_LINK
$ DEASSIGN SYS$OUTPUT
